
:root {

  /* Colors for probability bars */ 
  --bar-color-0: red;
  --bar-color-1: green;
  --bar-color-joint: blue;

  /* Colors for Bloch sphere plot */
  --color-south: #ff0099;
  --color-equator: #fcf4a3;
  --color-north: #000000;
  --arrow-color: #ffffff;



  --primary-bg-color: #202020;    /* Background of entire canvas and qubit container */
  --primary-text-color: #ffffff;  /* Text color (except for buttons) */
  --chart-bg-color: #202020;      /* Background for Bloch sphere plots */
  --entangletext-color: #ff0000;

  /* Some color gradients  */
  --primary-button-gradient: linear-gradient(135deg, #6a11cb, #2575fc);
  --primary-bloch-gradient: linear-gradient(135deg, rgba(102, 255, 255, 0.2), rgba(255, 102, 255, 0.2));
  --traumzeit-gradient: linear-gradient(135deg, #FFB487 0%, #F8D1A3 40%, #A0D8D0 70%, #609AAD 100%);
  
  /*****************************/
  /***** Button Properties *****/
  /*****************************/
  /* Buttons - background */
  --button-bg: var(--traumzeit-gradient);
  --measurebutton-bg: var(--entangletext-color);

  /* Buttons - Border radius  */
  --button-br: 999px;
  --measurebutton-br: 999px;

  /* Buttons - bordercolor */
  --button-bc: #00ff00;

  /* Buttons - Hover properties */
  --buttontext-color: #ff00ff;
  --buttonhover-color: #ffffff;
  --buttonhovertext-color: #202020;

  --fontsize-topbar: 24px;        /* Font size for topbar (no. of qubits, entangle vs. product) */
  --fontsize-measure: 24px;       /* Fontsize for measurement button */

  /*****************************/
  /***** Toggle Properties *****/
  /*****************************/
  
  /* Background */
  --background-toggle-on: linear-gradient(135deg, #6a11cb, #2575fc);;
  --background-toggle-off: linear-gradient(135deg, #FFB487 0%, #F8D1A3 40%, #A0D8D0 70%, #609AAD 100%); ;

  /* Knob */
  --sliderknob-color: #00ffff;

  --qubitlabel-color: #00ffff;


  --slideraccent-color: red;


}

html, body {
  margin: 0;
  padding: 0;
  height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  background: var(--primary-bg-color);
  color: var(--primary-text-color);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  font-weight: 300;
}

#topControls {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px;
  flex-shrink: 0;
}

#qubitControls {
  padding: 8px 12px;
  flex-shrink: 0;
  font-size: var(--fontsize-topbar);
}

#qubitControls span {
  margin-right: 20px; /* Adjust as needed */
}

/* Wrapper for toggle between product state / entangled state */
#entangleContainer {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-left: 20px;
  font-size: var(--fontsize-topbar);
  color: var(--primary-text-color);
}


#entangleInfoBox {
  position: absolute;
  color: var(--entangletext-color);
  background: var(--primary-bloch-gradient);
  text-align: center;
  padding: 0;
  font-size: 18px;
  z-index: 15;
  pointer-events: none;
  transition: left 0.2s, width 0.2s, top 0.2s, height 0.2s;

  /* Center text horizontally & vertically */
  display: flex;
  justify-content: center;
  align-items: center;

  /* Make sure it fills the Bloch sphere region */
  height: 100%;
  width: 100%;
  border: 2px white;                                                                

/*  padding: 20px;*/
  /* Optional styling for rounded appearance */
  border-radius: 12px;
  box-shadow: 0 0 12px rgba(102, 255, 255, 0.5);
}

.entangleText {
  display: inline-block;
  white-space: pre-line;
  max-width: 60%;
  line-height: 1.5;
  text-align: left;
}


#qubitGrid {
  flex-grow: 1;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 12px;
  padding: 12px;
  overflow: hidden;
  box-sizing: border-box;
}

#jointProbChart {
  width: 100%;
  height: 100%;
}

/* Qubit Column Layout */
.qubitContainer {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  background: var(--primary-bg-color);
  border-radius: 8px;
  gap: 12px;
  padding: 8px;
  height: 100%;
  box-sizing: border-box;
  min-height: 0;
  overflow: hidden;
}

/* Bloch Sphere Container */
.canvasWrapper {
  width: 100%;
  position: relative;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Probability Chart */
.chartWrapper {
  width: 100%;
  min-height: 200px;
  flex-grow: 1;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Control Section */
.controlRow {
  width: 100%;
  min-height: 100px;
  max-height: 180px;
  height: min(20vh, 180px);
  padding: 10px 0;
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.sliderWrapper {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.sliderWrapper label {
  font-size: 24px;
  color: var(--primary-text-color);
  display: flex;
/*  flex-direction: column;*/
  flex-direction: row;
  align-items: center;
  gap: 10px;
}

.sliderWrapper input {
  width: 100%;
  height: 24px;
}

.measureBtn {
/*  height: 40px;*/
  font-size: var(--fontsize-measure);
  width: 100%;
  max-width: 320px;
  padding: 10px 18px;
  margin: 0 auto; 
  /* Stadium shaped form */
  border-radius: var(--measurebutton-br);
  background: var(--measurebutton-bg);
}

/* Canvas and Charts */
.qubitCanvas {
  width: 100%;
  aspect-ratio: 1 / 1;
  display: block;
  background-color: var(--chart-bg-color);
}

.qubitChart {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: contain;
}

button {
  background-color: var(--primary-bg-color);  /* Inner fill */
  color: var(--buttontext-color);                                 /* Text color */
  border: 2px solid var(--button-bc);                    /* White border */
  border-radius: var(--button-br);               /* No rounded corners */
  padding: 1px 18px;
  min-width: 60px;
  font-size: var(--fontsize-topbar);
  cursor: pointer;
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.1s;
}

button:hover{
  transform: translateY(-2px);
  background-color: var(--buttonhover-color);        /* Invert on hover */
  color: var(--buttonhovertext-color);
}

button:focus {
  transform: translateY(-2px);
  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.25);
  outline: none;
}

button:active {
  transform: scale(0.97);
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
}

/* Toggle Switch */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 32px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* === Slider Track === */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0; left: 0;
  right: 0; bottom: 0;
  background: var(--traumzeit-gradient);*/
  transition: 0.4s;
  border-radius: 34px;
}

/* === Slider Knob === */
.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 3px;
  bottom: 3px;
  background-color: var(--sliderknob-color);
  transition: 0.4s;
  border-radius: 50%;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);
}

input:checked + .slider:before {
  transform: translateX(28px);
}

.switch:hover .slider {
  filter: brightness(1.1);
}

input:checked + .slider {
  background: var(--background-toggle-on); /* background when ON */
}

input:not(:checked) + .slider {
  background: var(--background-toggle-off); /* background when OFF */
}


input[type="range"] {
  accent-color: var(--slideraccent-color);  /* Chrome, Edge, Safari, Firefox */
}